{"version":3,"sources":["storage.ts","config.js","components/AuthForm.jsx","components/NavBar.jsx","components/News.jsx","components/Portfolio.jsx","components/Quotes.jsx","components/Instrument.jsx","components/Settings.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["setContext","user","pass","localStorage","setItem","getContext","getItem","username","password","config","baseURL","AuthForm","props","useState","formInputs","setFormInputs","onChange","e","target","name","value","onSubmit","a","axios","get","auth","onLogin","alert","console","log","Container","className","Jumbotron","Form","Group","controlId","Label","Control","type","placeholder","Button","variant","NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","preventDefault","removeItem","logout","window","history","pushState","News","Portfolio","portfolio","setPortfolio","useEffect","res","JSON","parse","data","p","getP","scope","map","instrument","symbol","shortName","totalValue","_id","reduce","total","inst","toFixed","Quotes","React","Component","InstrumentForm","handleSubmit","handleInput","Row","Col","Instrument","edit","setEdit","post","handleRemove","prevPortfolio","filter","Settings","isShowModal","setIsShowModal","modalInput","setModalInput","hideModal","addInstrument","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Main","App","setAuth","path","exact","component","render","Boolean","location","hostname","match","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7c7a3fab.chunk.js","sourcesContent":["export const setContext = ({ user, pass }) => {\n  localStorage.setItem('user', user);\n  localStorage.setItem('pass', pass);\n};\n\nexport const getContext = () => {\n  if (localStorage.getItem('user')) {\n    return { username: localStorage.getItem('user'), password: localStorage.getItem('pass') };\n  }\n  return null;\n};\n\nexport const removeContext = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('pass');\n}\n","const config = {\n  baseURL: process.env.NODE_ENV === 'production' ? 'http://invest.terminal.mobi:4000' : 'http://localhost:4000'\n};\nexport default config;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { setContext } from '../storage';\nimport config from '../config';\nimport { Form, Button, Container, Jumbotron } from 'react-bootstrap';\n\nconst AuthForm = (props) => {\n  const [formInputs, setFormInputs] = useState({ user: '', pass: '' });\n\n  const onChange = (e) => {\n    setFormInputs({ ...formInputs, [e.target.name]: e.target.value });\n  }\n  const onSubmit = async (e) => {\n    try {\n      await axios.get('/', {\n          auth: {\n              username: formInputs.user,\n              password: formInputs.pass\n          },\n          baseURL: config.baseURL,\n        }\n      );\n      props.onLogin();\n      setContext(formInputs);\n    } catch (e) {\n      alert('login error!');\n      console.log(e);\n    }\n    setFormInputs({user: '', pass: ''});\n  }\n\n  return (\n    <Container className=\"p-4\">\n      <Jumbotron>\n        <Form onSubmit={onSubmit}>\n          <h2>Вход в кабинет</h2>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Логин</Form.Label>\n            <Form.Control type=\"name\" name=\"user\" placeholder=\"Введите ваш логин\" onChange={onChange} value={formInputs.user}/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Пароль</Form.Label>\n            <Form.Control type=\"password\" name=\"pass\" placeholder=\"Введите ваш пароль\" onChange={onChange} value={formInputs.pass}/>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Вход\n          </Button>\n        </Form>\n      </Jumbotron>\n    </Container>\n  );\n}\nexport default AuthForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar, Button } from 'react-bootstrap';\nimport { removeContext } from '../storage';\n\nconst NavBar = (props) => {\n  const signOut = (e) => {\n    e.preventDefault();\n    removeContext();\n    props.logout();\n    window.history.pushState(null, null, '/');\n  }\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Invest-Box</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link className=\"nav-link\" to=\"/news\">Новости</Link>\n          <Link className=\"nav-link\" to=\"/quotes\">Котировки</Link>\n          <Link className=\"nav-link\" to=\"/portfolio\">Портфель</Link>\n          <Link className=\"nav-link\" to=\"/settings\">Настройки</Link>\n        </Nav>\n        <Nav className=\"ml-auto\">\n          <Button variant=\"outline-secondary\" onClick={signOut}>Выход</Button>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;","import React from 'react';\n\nconst News = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-6\">\n        <h1>News</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default News;","import React from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { getContext } from '../storage';\nimport { useState, useEffect } from 'react';\n\nconst Portfolio = () => {\n  const [portfolio, setPortfolio] = useState([]);\n  useEffect(() => {\n    const getP = async () => {\n      const res = await axios.get(`/portfolio/${getContext().username}`, {\n        auth: getContext(),\n        baseURL: config.baseURL\n      });\n      setPortfolio(JSON.parse(res.data.p));\n    }\n    getP();\n  }, []); // как правильно определять зависимости?\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-6\">\n          <h2>Портфель</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Symbol</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Value</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Total value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {portfolio.map(instrument => {\n                return (\n                  <tr key={instrument._id}>\n                    <td>{instrument.symbol}</td>\n                    <td>{instrument.shortName}</td>\n                    <td>{instrument.value}</td>\n                    <td>{instrument.totalValue / instrument.value}</td>\n                    <td>{instrument.totalValue}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n          <h3>Стоимость портфеля: {portfolio.reduce((total, inst) => total + inst.totalValue, 0).toFixed(2)}</h3>\n        </div>\n      </div>\n    </div>\n  )\n} \n\nexport default Portfolio;","import React from 'react';\n\nexport default class Quotes extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col-6\">\n          <h1>Quotes</h1>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { getContext } from '../storage';\nimport { Form, Button, Col } from 'react-bootstrap';\n\nconst InstrumentForm = (props) => {\n  const { handleSubmit, value, handleInput } = props;\n  return (<Form onSubmit={handleSubmit}>\n    <Form.Row>\n      <Col>\n        <Form.Group controlId=\"formValue\">\n          <Form.Control type=\"text\" value={value} onChange={handleInput}/>\n        </Form.Group>\n      </Col>\n      <Col>\n        <Button variant=\"outline-secondary\" type=\"submit\">\n          OK\n        </Button>\n      </Col>\n    </Form.Row>\n  </Form>);\n}\n\nconst Instrument = (props) => {\n  const [edit, setEdit] = useState(false);\n  const { setPortfolio, instrument } = props;\n\n  const handleInput = (e) => {\n    setPortfolio(prevPortfolio => prevPortfolio.map(inst => {\n      if (inst._id === instrument._id) {\n         return { ...inst, value: e.target.value };\n      }\n      return inst;\n    }));\n  }\n  const handleSubmit = async () => {\n    setEdit(false);\n    try {\n      await axios.post(`/portfolio/update`,\n      {\n        username: getContext().username,\n        symbol: instrument.symbol,\n        value: instrument.value\n      },\n      {\n        auth: getContext(),\n        baseURL: config.baseURL,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  const handleToggle = () => {\n    setEdit(true);\n  }\n  const handleRemove = async () => {\n    try {\n      await axios.post(`/portfolio/remove`,\n      {\n        username: getContext().username,\n        symbol: instrument.symbol,\n      },\n      {\n        auth: getContext(),\n        baseURL: config.baseURL,\n      });\n      setPortfolio(prevPortfolio => prevPortfolio.filter(inst => inst._id !== instrument._id));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row\">\n      <div className=\"col-7\"><b>{instrument.shortName}</b></div>\n      {edit ?\n        <div className=\"col-3\">\n          <InstrumentForm \n            handleSubmit={handleSubmit} \n            value={instrument.value} \n            handleInput={handleInput}\n          />\n        </div> :\n        <>\n          <div className=\"col-1\"><b>{props.instrument.value}</b></div>\n          <div className=\"col-2\"><button type=\"button\" className=\"btn btn-sm btn-light\" onClick={handleToggle}>Изменить</button></div>\n        </>}\n      <div className=\"col-2\"><button type=\"button\" className=\"btn btn-sm btn-light\" onClick={handleRemove}>Удалить</button></div>\n      </div>\n    </li>\n  )\n}\n\nexport default Instrument;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { getContext } from '../storage';\nimport Instrument from './Instrument';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst Settings = () => {\n  const [portfolio, setPortfolio] = useState([]);\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [modalInput, setModalInput] = useState({  symbol: '', value: '' });\n\n  const showModal = () => {\n    setIsShowModal(true);\n  }\n  const hideModal = () => {\n    setIsShowModal(false);\n  }\n  const addInstrument =  async () => {\n      await axios.post(`/portfolio/add`,\n      {\n        username: getContext().username,\n        symbol: modalInput.symbol,\n        value: modalInput.value,\n      },\n      {\n        auth: getContext(),\n        baseURL: config.baseURL,\n      });\n      setIsShowModal(false);\n    }\n  \n  \n  const handleInput = (e) => {\n    setModalInput( {...modalInput, [e.target.name]: e.target.value });\n  }\n\n  useEffect(() => {\n    const getP = async () => {\n      const res = await axios.get(`/portfolio/${getContext().username}`, {\n        auth: getContext(),\n        baseURL: config.baseURL\n      });\n      setPortfolio(JSON.parse(res.data.p));\n    }\n    getP();\n  }, []);\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n          <h1 className=\"\">Настройки портфеля</h1>\n        </div>\n        <div className=\"row justify-content-md-center\">\n        <ul className=\"list-group col-8\">\n            {portfolio.map(instrument => (<Instrument key={instrument._id} instrument={instrument} setPortfolio={setPortfolio} />))}\n        </ul>\n        </div>\n        <div className=\"row justify-content-md-center mt-4\">\n          <div className=\"col-2 \"><button type=\"button\" className=\"btn btn-outline-secondary\" onClick={showModal}>Добавить</button></div>\n        </div>\n      </div>\n      <Modal show={isShowModal} onHide={hideModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Добавить инструмент в портфель</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Тикер</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Введите название\" name=\"symbol\" value={modalInput.symbol} onChange={handleInput} />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Количество</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Введите количество\" name=\"value\" value={modalInput.value} onChange={handleInput} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={hideModal}>\n            Закрыть\n          </Button>\n          <Button variant=\"secondary\" onClick={addInstrument}>\n            Добавить\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Settings;\n","import React from 'react';\n\nconst Main = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-6\">\n        <h1>Main</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AuthForm from './components/AuthForm';\nimport { getContext } from './storage';\nimport NavBar from './components/NavBar';\nimport News from './components/News';\nimport Portfolio from './components/Portfolio';\nimport Quotes from './components/Quotes';\nimport Settings from './components/Settings';\nimport Main from './components/Main';\n\nconst App = () => {\n  const [auth, setAuth] = useState('logout');\n  const login = () => {\n    setAuth('login');\n  }\n  const logout = () => {\n    setAuth('logout');\n  }\n  useEffect(() => {\n    setAuth(getContext() ? 'login' : 'logout'); \n  }, []); // че с зависимостями?\n\n  if (auth === 'login') {\n    return (\n      <Router>\n        <NavBar logout={logout} />\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/news/\" component={(News)} />\n          <Route path=\"/portfolio/\" component={(Portfolio)} />\n          <Route path=\"/quotes/\" component={(Quotes)} />\n          <Route path=\"/settings/\" render={props => <Settings {...props} />} />\n      </Router>\n    );\n  } else {\n    return <AuthForm onLogin={login}/>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}